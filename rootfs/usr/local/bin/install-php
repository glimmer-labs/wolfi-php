#!/bin/sh
#
# install-php - Installs PHP and optionally Composer
#
# Usage: install-php <php_version> [--composer]
#
# Arguments:
#   php_version    PHP version to install (e.g., 8.3)
#   --composer     If provided, also installs Composer
#   --frankenphp   If provided, installs frankenphp php and extensions instead of normal php
#
# Examples:
#   install-php 8.3
#   install-php 8.4 --composer --frankenphp

# Exit on error
set -e

# Function to display error messages and exit
error_exit() {
    echo "ERROR: $1" >&2
    exit 1
}

# Check if PHP version is provided
if [ $# -eq 0 ]; then
    error_exit "PHP version is required Usage: php-install <php_version> [--composer] [--frankenphp]"
fi

# First argument is the PHP version
PHP_VERSION=$1
shift

# Validate PHP version format
if ! echo "$PHP_VERSION" | grep -qE '^[0-9]+\.[0-9]+$'; then
    error_exit "Invalid PHP version format: $PHP_VERSION. Expected format: X.Y (e.g., 8.3)"
fi

# Initialize flags
PHP_APK_PREFIX="php"
INSTALL_COMPOSER=false

# Parse arguments
for arg in "$@"; do
    case "$arg" in
        "--composer")
            INSTALL_COMPOSER=true
            ;;
        "--frankenphp")
            add-shyim-repo
            PHP_APK_PREFIX="php-frankenphp"
            ;;
        *)
            error_exit "Unknown option: $arg"
            ;;
    esac
done

# Fallback in case the script is called twice
PHP_APK_PREFIX=$(apk info -e "frankenphp-${PHP_VERSION}" > /dev/null 2>&1 && echo "php-frankenphp" || echo $PHP_APK_PREFIX)

ENGINE=$([ "$PHP_APK_PREFIX" = "php-frankenphp" ] && echo "FrankenPHP" || echo "PHP")
echo "Installing $ENGINE $PHP_VERSION and core extensions for Laravel..."

# Install PHP and core extensions for Laravel
if ! apk add --no-cache \
    ca-certificates \
    $([ "$PHP_APK_PREFIX" = "php-frankenphp" ] && echo "frankenphp-${PHP_VERSION}" || echo "") \
    ${PHP_APK_PREFIX}-${PHP_VERSION} \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-pdo \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-mbstring \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-xml \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-dom \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-fileinfo \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-openssl \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-phar \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-opcache \
    ${PHP_APK_PREFIX}-${PHP_VERSION}-curl \
    curl; then
    error_exit "Failed to install PHP $PHP_VERSION and core extensions"
fi

# Install Composer if flag is set
if [ "$INSTALL_COMPOSER" = true ]; then
    echo "Installing Composer..."

    if ! install-composer; then
        error_exit "Failed to install Composer"
    fi

    echo "$ENGINE $PHP_VERSION, Laravel required extensions and Composer installation completed successfully."
else
    echo "$ENGINE $PHP_VERSION and Laravel required extensions installation completed successfully."
fi
